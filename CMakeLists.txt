#Generated by VisualGDB project wizard.
#Note: VisualGDB will automatically update this file when you add new sources to the project.

# cheeck the cmake version, if you cmake version is not 3.5, change to your current version.
cmake_minimum_required(VERSION 3.5)
project(RobotBase)

# the libraries we used in the code
find_package(glog REQUIRED)
find_package(OpenCV 4.1.0 REQUIRED)
find_package(Boost REQUIRED)
find_package(Threads)
include_directories(${OpenCV_INCLUDE_DIRS})
include_directories(../)

add_executable(RobotBase
        RobotBase/main.cpp
        RobotBase/vision/bigbuff/BigbuffDetection.cpp
        RobotBase/vision/vision_main.cpp
        RobotBase/vision/vision_main.h
        RobotBase/vision/autoAim/autoAim.h
        RobotBase/vision/autoAim/autoAim.cpp
        RobotBase/vision/autoAim/armor.cpp
        RobotBase/vision/autoAim/armor.h
        RobotBase/vision/control.h
        RobotBase/record_video/recording_main.cpp
        RobotBase/record_video/recording_main.h
        RobotBase/vision/cam/Daheng.cpp
        RobotBase/vision/cam/Daheng.cpp
        RobotBase/Robogrinder_SDK/serial_port.cpp
        )
link_directories(../)
target_link_libraries(RobotBase gxiapi)
target_link_libraries(RobotBase glog)
target_link_libraries(RobotBase ${OpenCV_LIBS})
target_link_libraries(RobotBase ${Boost_LIBRARIES})
target_link_libraries (RobotBase ${CMAKE_THREAD_LIBS_INIT})

set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG}")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}")


# depend on the platform
if (${CMAKE_SYSTEM_PROCESSOR} MATCHES "aarch64")
    message(STATUS "The current platform is arm")
    SET(CMAKE_BUILD_TYPE Release)
    message(STATUS "CMAKE_BUILD_TYPE='${CMAKE_BUILD_TYPE}' is defined")
    message(STATUS "The release flag is ${CMAKE_CXX_FLAGS_RELEASE}")
else ()
    message(STATUS "The current platform is x86_64")
    SET(CMAKE_BUILD_TYPE Debug)
    message(STATUS "CMAKE_BUILD_TYPE='${CMAKE_BUILD_TYPE}' is defined")
    message(STATUS "The debug flag is ${CMAKE_CXX_FLAGS_DEBUG}")
endif ()
